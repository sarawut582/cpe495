import cv2
import time
import os
from datetime import datetime

# IP ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á Tapo C320WS
camera_ip = 'rtsp://Face495:cpe495@172.20.10.2:554/stream1'

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡πâ‡∏≠‡∏á RTSP ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ FFmpeg ‡∏´‡∏£‡∏∑‡∏≠ GStreamer
capture = cv2.VideoCapture(camera_ip, cv2.CAP_FFMPEG)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏•‡πâ‡∏≠‡∏á RTSP
if not capture.isOpened():
    print("Error: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á RTSP ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ FFmpeg")
    print("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ GStreamer...")

    # ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ GStreamer
    capture = cv2.VideoCapture(camera_ip, cv2.CAP_GSTREAMER)

    if not capture.isOpened():
        print("Error: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á RTSP ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ GStreamer")
        exit()

print("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á RTSP ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
capture.set(3, 1280)
capture.set(4, 720)

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ FPS
fps = 15

# ‡πÄ‡∏û‡∏¥‡πà‡∏° buffer size ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö RTSP
capture.set(cv2.CAP_PROP_BUFFERSIZE, 3)

# ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
output_folder = "recorded_videos"
os.makedirs(output_folder, exist_ok=True)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤
def get_filename():
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    return os.path.join(output_folder, f"record_{timestamp}.mp4")

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ codec ‡πÅ‡∏•‡∏∞ video writer
fourcc = cv2.VideoWriter_fourcc(*'mp4v')

# ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏î‡∏Ñ‡∏•‡∏¥‡∏õ
clip_duration = 2 * 60  # 2 ‡∏ô‡∏≤‡∏ó‡∏µ
start_time = time.time()

while True:
    video_filename = get_filename()
    done_filename = video_filename + ".done"

    video_out = cv2.VideoWriter(video_filename, fourcc, fps, (1280, 720))
    
    print(f"üìπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠: {video_filename}")

    while True:
        ret, frame = capture.read()
        if not ret:
            print("‚ùå Error: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏ü‡∏£‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á!")
            break

        video_out.write(frame)
        cv2.imshow('Recording (Face Detection)', frame)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏î‡∏Ñ‡∏•‡∏¥‡∏õ‡πÉ‡∏´‡∏°‡πà
        if time.time() - start_time >= clip_duration:
            break

        # ‡∏Å‡∏î 'q' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å
        if cv2.waitKey(1) & 0xFF == ord('q'):
            capture.release()
            cv2.destroyAllWindows()
            exit()

    # ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
    video_out.release()
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå `.done`
    with open(done_filename, "w") as f:
        f.write("done")

    print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: {video_filename}")

    # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    start_time = time.time()
